ribodetector -t 32 -l 80 -i zr10184_2rna.TM.fastq.gz -o zr10184_2rna.fastq.gz --chunk_size 4096

sudo docker run -v /home:/home -it stang/trimreads:v2 /bin/bash
cd 



NVIDIA T4 GPU

g4ad.8xlarge, use AMD GPU which is not compatible with CUDA

g4dn.8xlarge instances use Nvidia GPU 




Deep Learning AMI GPU PyTorch 1.13.1 (Ubuntu 20.04) 20230515

NVIDIA-SMI 525.85.12    Driver Version: 525.85.12    CUDA Version: 12.0


To use docker with the access to GPU, you need to use '--gpus all'

sudo docker run --gpus all nvidia/cuda:12.2.0-devel-ubuntu20.04 /bin/bash



#############

this instance uses intel Xeon processor

c6i.32xlarge	128	256 GiB	EBS only	$5.44	


#############
I tried different ways to get ribodetector work with GPU mode on AWS EC2 instances. None of them worked.

1. I tried install GPU drivers, CUDA, and Torch on a Docker image, I was able to get ribodetector work on GPU but it runs into issues.
2. I tried to use an EC2 instance preinstalled with GPU drivers, CUDA, and Torch,  I was able to get ribodetector work on GPU but it runs into issues.

My conclusion is the ribodetector might have fundamental software issues with GPUs. I will investigate more in the future.

